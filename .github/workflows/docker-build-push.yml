name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker image version tag'
        required: true
        default: 'latest'
        type: string
      push_to_registry:
        description: 'Push images to Docker Hub'
        required: true
        default: true
        type: boolean

env:
  DOCKER_REGISTRY: docker.io
  FRONTEND_IMAGE_NAME: ragchat-frontend
  BACKEND_IMAGE_NAME: ragchat-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: inputs.push_to_registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./chatapp
        file: ./chatapp/Dockerfile
        push: inputs.push_to_registry
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ inputs.version }}
          ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: inputs.push_to_registry
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }}:${{ inputs.version }}
          ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Output image information
      run: |
        echo "Frontend image: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ inputs.version }}"
        echo "Backend image: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }}:${{ inputs.version }}"
        if [ "${{ inputs.push_to_registry }}" == "true" ]; then
          echo "Images have been pushed to Docker Hub"
        else
          echo "Images were built locally (not pushed to registry)"
        fi 