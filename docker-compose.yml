version: '3.8'

services:
  # frontend:
  #   build:
  #     context: ./chatapp
  #   environment:
  #     - VITE_API_HOST=http://backend
  #     - VITE_API_PORT=8000
  #     - VITE_APP_TITLE=Docker RAG Chat
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./chatapp/chatapp-cert.pem:/etc/nginx/ssl/chatapp-cert.pem:ro
  #     - ./chatapp/chatapp-key.pem:/etc/nginx/ssl/chatapp-key.pem:ro
  #   depends_on:
  #     - backend

  frontend:
    build:
      context: ./ragchat
    ports:
      - "80:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
      - AllowedHosts=*
      - Api__Host=backend
      - Api__Port=8001
      - Api__Protocol=http
      - ChatService__Type=Api
    depends_on:
      - backend
      
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    environment:
      - CORS_ORIGINS=http://localhost,http://127.0.0.1,http://frontend:8001
      - MONGODB_USER=root
      - MONGODB_PASSWORD=password
      - MONGODB_HOST=mongo
      - MONGODB_PORT=27017
      - DB_TYPE=mongodb
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
    depends_on:
      - chroma
      - mongo

  chroma:
    image: chromadb/chroma:1.0.12
    environment:
      - ANONYMIZED_TELEMETRY=False
    volumes:
      - ./chroma_data:/data

  mongo:
    image: mongo:8.0.10
    ports:
      - "8081:8081"
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_ROOT_USERNAME: root
    volumes:
      - ./mongo_data:/data/db

  mcp-server:
    build:
      context: ./mcp-server
    ports:
      - "8002:8000"
    volumes:
      - ./mcp-server:/app
    environment:
      - CHROMA_COLLECTION_NAME=gcas_azure_guide_openai
      - CHROMA_PORT=8000
      - CHROMA_HOST=chroma
    env_file:
      - ./mcp-server/.env