@using System.Security.Claims
@using ragchat.Services
@inject CustomAuthenticationService AuthService
@inject NavigationManager NavigationManager
@inject ILogger<Login> Logger
@rendermode InteractiveServer

<div class="login-container">
    <AuthorizeView>
        <Authorized>
            <p>Hello, @context.User.Identity?.Name!</p>
        </Authorized>
        <NotAuthorized>
            <p>You're not authorized.</p>
        </NotAuthorized>
    </AuthorizeView>
    <div class="login-form">
        <h2>ログイン</h2>
        <MudTextField @bind-Value="userIdentifier" 
                      ShrinkLabel 
                      Label="ユーザー名" 
                      Variant="Variant.Text"
                      Lines="1"
                      Class="mb-3" />
        <MudButton OnClick="SignIn" 
                   Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   FullWidth="true">
            ログイン
        </MudButton>
    </div>
</div>

<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #f5f5f5;
    }
    
    .login-form {
        background: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        width: 100%;
        max-width: 400px;
    }
</style>

@code {
    private string userIdentifier = string.Empty;

    private void SignIn()
    {
        Logger.LogInformation($"SignIn called! userIdentifier: '{userIdentifier}'");
        if (string.IsNullOrWhiteSpace(userIdentifier))
            return;

        var currentUser = AuthService.CurrentUser;

        var identity = new ClaimsIdentity(
            [
                new Claim(ClaimTypes.Name, userIdentifier),
            ],
            "Custom Authentication");

        var newUser = new ClaimsPrincipal(identity);
        AuthService.CurrentUser = newUser;
        
        NavigationManager.NavigateTo("/", true);
    }
} 